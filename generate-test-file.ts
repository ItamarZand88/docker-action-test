import { execSync } from "child_process";
import * as fs from "fs";
import * as path from "path";

const TEST_FILE_PATH = path.join("tests", "example.test.ts");
const BRANCH_NAME = "test/example-test-branch";

function run(cmd: string) {
  console.log(`Running: ${cmd}`);
  execSync(cmd, { stdio: "inherit" });
}

// יצירת תיקייה וקובץ טסטים פשוט
function writeTestFile() {
  if (!fs.existsSync("tests")) fs.mkdirSync("tests");
  fs.writeFileSync(
    TEST_FILE_PATH,
    `describe('Example Test', () => {
    it('should pass', () => {
      expect(true).toBe(true);
    });
  });`
  );
  console.log(`✅ Test file written to ${TEST_FILE_PATH}`);
}

// יצירת branch חדש, commit, push
function createBranchAndCommit() {
  run(`git checkout -b ${BRANCH_NAME}`);
  run(`git add tests/`);
  run(`git commit -m "Add example test file"`);
  run(`git push origin ${BRANCH_NAME}`);
}

// יצירת Pull Request
function createPullRequest() {
  const token = process.env.GITHUB_TOKEN;
  if (!token) throw new Error("❌ GITHUB_TOKEN is missing!");

  const repo = process.env.GITHUB_REPOSITORY;
  if (!repo) throw new Error("❌ GITHUB_REPOSITORY not found!");

  const [owner, repoName] = repo.split("/");

  run(`curl -X POST -H "Authorization: token ${token}" -d '{
    "title": "Add autogenerated test",
    "body": "This test was generated automatically.",
    "head": "${BRANCH_NAME}",
    "base": "main"
  }' https://api.github.com/repos/${owner}/${repoName}/pulls`);
}

async function main() {
  writeTestFile();
  createBranchAndCommit();
  createPullRequest();
}

main().catch((err) => {
  console.error("❌ Error:", err);
  process.exit(1);
});
